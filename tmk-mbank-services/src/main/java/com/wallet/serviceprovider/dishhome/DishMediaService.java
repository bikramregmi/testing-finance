
package com.wallet.serviceprovider.dishhome;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "DishMediaService", targetNamespace = "http://tempuri.org/", wsdlLocation = "file:/home/bibash/NetBeansProjects/WebApplication1/src/conf/xml-resources/web-services/NewWebServiceFromWSDL/wsdl/110.44.124.37_1013/dishmediaservice.asmx.wsdl")
public class DishMediaService
    extends Service
{

    private final static URL DISHMEDIASERVICE_WSDL_LOCATION;
    private final static WebServiceException DISHMEDIASERVICE_EXCEPTION;
    private final static QName DISHMEDIASERVICE_QNAME = new QName("http://tempuri.org/", "DishMediaService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/bibash/NetBeansProjects/WebApplication1/src/conf/xml-resources/web-services/NewWebServiceFromWSDL/wsdl/110.44.124.37_1013/dishmediaservice.asmx.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DISHMEDIASERVICE_WSDL_LOCATION = url;
        DISHMEDIASERVICE_EXCEPTION = e;
    }

    public DishMediaService() {
        super(__getWsdlLocation(), DISHMEDIASERVICE_QNAME);
    }

    public DishMediaService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DISHMEDIASERVICE_QNAME, features);
    }

    public DishMediaService(URL wsdlLocation) {
        super(wsdlLocation, DISHMEDIASERVICE_QNAME);
    }

    public DishMediaService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DISHMEDIASERVICE_QNAME, features);
    }

    public DishMediaService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DishMediaService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DishMediaServiceSoap
     */
    @WebEndpoint(name = "DishMediaServiceSoap")
    public DishMediaServiceSoapInterface getDishMediaServiceSoap() {
        return super.getPort(new QName("http://tempuri.org/", "DishMediaServiceSoap"), DishMediaServiceSoapInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DishMediaServiceSoap
     */
    @WebEndpoint(name = "DishMediaServiceSoap")
    public DishMediaServiceSoapInterface getDishMediaServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "DishMediaServiceSoap"), DishMediaServiceSoapInterface.class, features);
    }

    /**
     * 
     * @return
     *     returns DishMediaServiceSoap
     */
    @WebEndpoint(name = "DishMediaServiceSoap12")
    public DishMediaServiceSoapInterface getDishMediaServiceSoap12() {
        return super.getPort(new QName("http://tempuri.org/", "DishMediaServiceSoap12"), DishMediaServiceSoapInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DishMediaServiceSoap
     */
    @WebEndpoint(name = "DishMediaServiceSoap12")
    public DishMediaServiceSoapInterface getDishMediaServiceSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "DishMediaServiceSoap12"), DishMediaServiceSoapInterface.class, features);
    }

    /**
     * 
     * @return
     *     returns DishMediaServiceHttpPost
     */
    @WebEndpoint(name = "DishMediaServiceHttpPost")
    public DishMediaServiceHttpPost getDishMediaServiceHttpPost() {
        return super.getPort(new QName("http://tempuri.org/", "DishMediaServiceHttpPost"), DishMediaServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DishMediaServiceHttpPost
     */
    @WebEndpoint(name = "DishMediaServiceHttpPost")
    public DishMediaServiceHttpPost getDishMediaServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "DishMediaServiceHttpPost"), DishMediaServiceHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DISHMEDIASERVICE_EXCEPTION!= null) {
            throw DISHMEDIASERVICE_EXCEPTION;
        }
        return DISHMEDIASERVICE_WSDL_LOCATION;
    }

}
